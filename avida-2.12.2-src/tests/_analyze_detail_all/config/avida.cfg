#############################################################################
# This file includes all the basic run-time defines for Avida.
# For more information, see doc/config.html
#############################################################################

VERSION_ID 2.7.0   # Do not change this value.

### GENERAL_GROUP ###
# General Settings
ANALYZE_MODE 1  # 0 = Disabled
                # 1 = Enabled
                # 2 = Interactive
VIEW_MODE 1     # Initial viewer screen
CLONE_FILE -    # Clone file to load
VERBOSITY 1     # Control output verbosity

### ARCH_GROUP ###
# Architecture Variables
WORLD_X 60        # Width of the Avida world
WORLD_Y 60        # Height of the Avida world
WORLD_GEOMETRY 2  # 1 = Bounded Grid
                  # 2 = Torus
                  # 3 = Clique
RANDOM_SEED 0     # Random number seed (0 for based on time)
HARDWARE_TYPE 0   # 0 = Original CPUs
                  # 1 = New SMT CPUs
                  # 2 = Transitional SMT
                  # 3 = Experimental CPU
                  # 4 = Gene Expression CPU

### CONFIG_FILE_GROUP ###
# Configuration Files
DATA_DIR data                       # Directory in which config files are found
INST_SET -                          # File containing instruction set
EVENT_FILE events.cfg               # File containing list of events during run
ANALYZE_FILE analyze.cfg            # File used for analysis mode
ENVIRONMENT_FILE environment.cfg    # File that describes the environment
START_CREATURE default-classic.org  # Organism to seed the soup

### DEME_GROUP ###
# Demes and Germlines
NUM_DEMES 1                  # Number of independent groups in the population.
DEMES_USE_GERMLINE 0         # Whether demes use a distinct germline; 0=off
DEMES_HAVE_MERIT 0           # Whether demes have merit; 0=no
GERMLINE_COPY_MUT 0.0075     # Prob. of copy mutations occuring during
                             # germline replication.
GERMLINE_REPLACES_SOURCE 0   # Whether the source germline is updated
                             # on replication; 0=no.
GERMLINE_RANDOM_PLACEMENT 0  # Whether the seed for a germline is placed
                             #  randomly within the deme; 0=no.
MAX_DEME_AGE 500             # The maximum age of a deme (in updates) to be
                             # used for age-based replication (default=500).

### REPRODUCTION_GROUP ###
# Birth and Death
BIRTH_METHOD 0           # Which organism should be replaced on birth?
                         # 0 = Random organism in neighborhood
                         # 1 = Oldest in neighborhood
                         # 2 = Largest Age/Merit in neighborhood
                         # 3 = None (use only empty cells in neighborhood)
                         # 4 = Random from population (Mass Action)
                         # 5 = Oldest in entire population
                         # 6 = Random within deme
                         # 7 = Organism faced by parent
                         # 8 = Next grid cell (id+1)
                         # 9 = Largest energy used in entire population
                         # 10 = Largest energy used in neighborhood
PREFER_EMPTY 1           # Give empty cells preference in offsping placement?
ALLOW_PARENT 1           # Allow births to replace the parent organism?
DEATH_METHOD 2           # 0 = Never die of old age.
                         # 1 = Die when inst executed = AGE_LIMIT (+deviation)
                         # 2 = Die when inst executed = length*AGE_LIMIT (+dev)
AGE_LIMIT 20             # Modifies DEATH_METHOD
AGE_DEVIATION 0          # Creates a distribution around AGE_LIMIT
ALLOC_METHOD 0           # (Orignal CPU Only)
                         # 0 = Allocated space is set to default instruction.
                         # 1 = Set to section of dead genome (Necrophilia)
                         # 2 = Allocated space is set to random instruction.
DIVIDE_METHOD 1          # 0 = Divide leaves state of mother untouched.
                         # 1 = Divide resets state of mother
                         #     (after the divide, we have 2 children)
                         # 2 = Divide resets state of current thread only
                         #     (does not touch possible parasite threads)
INJECT_METHOD 0          # 0 = Leaves the parasite thread state untouched.
                         # 1 = Resets the calling thread state on inject
GENERATION_INC_METHOD 1  # 0 = Only the generation of the child is
                         #     increased on divide.
                         # 1 = Both the generation of the mother and child are
                         #     increased on divide (good with DIVIDE_METHOD 1).

### RECOMBINATION_GROUP ###
# Sexual Recombination and Modularity
RECOMBINATION_PROB 1.0  # probability of recombination in div-sex
MAX_BIRTH_WAIT_TIME -1  # Updates incipiant orgs can wait for crossover
MODULE_NUM 0            # number of modules in the genome
CONT_REC_REGS 1         # are (modular) recombination regions continuous
CORESPOND_REC_REGS 1    # are (modular) recombination regions swapped randomly
                        #  or with corresponding positions?
TWO_FOLD_COST_SEX 0     # 1 = only one recombined offspring is born.
                        # 2 = both offspring are born
SAME_LENGTH_SEX 0       # 0 = recombine with any genome
                        # 1 = only recombine w/ same length

### DIVIDE_GROUP ###
# Divide Restrictions
CHILD_SIZE_RANGE 2.0  # Maximal differential between child and parent sizes.
MIN_COPIED_LINES 0.5  # Code fraction which must be copied before divide.
MIN_EXE_LINES 0.5     # Code fraction which must be executed before divide.
REQUIRE_ALLOCATE 1    # (Original CPU Only) Require allocate before divide?
REQUIRED_TASK -1      # Task ID required for successful divide.
IMMUNITY_TASK -1      # Task providing immunity from the required task.
REQUIRED_REACTION -1  # Reaction ID required for successful divide.
REQUIRED_BONUS 0      # The bonus that an organism must accumulate to divide.

### MUTATION_GROUP ###
# Mutations
POINT_MUT_PROB 0.0    # Mutation rate (per-location per update)
COPY_MUT_PROB 0.0075  # Mutation rate (per copy)
INS_MUT_PROB 0.0      # Insertion rate (per site, applied on divide)
DEL_MUT_PROB 0.0      # Deletion rate (per site, applied on divide)
DIV_MUT_PROB 0.0      # Mutation rate (per site, applied on divide)
DIVIDE_MUT_PROB 0.0   # Mutation rate (per divide)
DIVIDE_INS_PROB 0.05  # Insertion rate (per divide)
DIVIDE_DEL_PROB 0.05  # Deletion rate (per divide)
DIVIDE_SLIP_PROB 0.0  # Slip rate (per divide) - creates large deletions/duplications
PARENT_MUT_PROB 0.0   # Per-site, in parent, on divide
SPECIAL_MUT_LINE -1   # If this is >= 0, ONLY this line is mutated
INJECT_INS_PROB 0.0   # Insertion rate (per site, applied on inject)
INJECT_DEL_PROB 0.0   # Deletion rate (per site, applied on inject)
INJECT_MUT_PROB 0.0   # Mutation rate (per site, applied on inject)
META_COPY_MUT 0.0     # Prob. of copy mutation rate changing (per gen)
META_STD_DEV 0.0      # Standard deviation of meta mutation size.
MUT_RATE_SOURCE 1     # 1 = Mutation rates determined by environment.
                      # 2 = Mutation rates inherited from parent.

### REVERSION_GROUP ###
# Mutation Reversion
# These slow down avida a lot, and should be set to 0.0 normally.
REVERT_FATAL 0.0           # Should any mutations be reverted on birth?
REVERT_DETRIMENTAL 0.0     #   0.0 to 1.0; Probability of reversion.
REVERT_NEUTRAL 0.0         # 
REVERT_BENEFICIAL 0.0      # 
STERILIZE_FATAL 0.0        # Should any mutations clear (kill) the organism?
STERILIZE_DETRIMENTAL 0.0  # 
STERILIZE_NEUTRAL 0.0      # 
STERILIZE_BENEFICIAL 0.0   # 
FAIL_IMPLICIT 0            # Should copies that failed *not* due to mutations
                           # be eliminated?
NEUTRAL_MAX 0.0            # The percent benifical change from parent fitness
                           # to be considered neutral.
NEUTRAL_MIN 0.0            # The percent deleterious change from parent fitness
                           # to be considered neutral.

### TIME_GROUP ###
# Time Slicing
AVE_TIME_SLICE 30           # Ave number of insts per org per update
SLICING_METHOD 1            # 0 = CONSTANT: all organisms get default...
                            # 1 = PROBABILISTIC: Run _prob_ proportional to merit.
                            # 2 = INTEGRATED: Perfectly integrated deterministic.
BASE_MERIT_METHOD 4         # 0 = Constant (merit independent of size)
                            # 1 = Merit proportional to copied size
                            # 2 = Merit prop. to executed size
                            # 3 = Merit prop. to full size
                            # 4 = Merit prop. to min of executed or copied size
                            # 5 = Merit prop. to sqrt of the minimum size
                            # 6 = Merit prop. to num times MERIT_BONUS_INST is in genome.
BASE_CONST_MERIT 100        # Base merit when BASE_MERIT_METHOD set to 0
DEFAULT_BONUS 1.0           # Initial bonus before any tasks
MERIT_DEFAULT_BONUS 0       # Scale the merit of an offspring by the default bonus
                            # rather than the accumulated bonus of the parent?
MERIT_BONUS_INST 0          # in BASE_MERIT_METHOD 6, this sets which instruction counts
                            # (-1 = none, 0 = First in INST_SET.)
MERIT_BONUS_EFFECT 0        # in BASE_MERIT_METHOD 6, this sets how much merit is earned
                            # per instruction (-1 = penalty, 0 = no effect.)
FITNESS_VALLEY 0            # in BASE_MERIT_METHOD 6, this creates valleys from
                            # FITNESS_VALLEY_START to FITNESS_VALLEY_STOP
                            # (0 = off, 1 = on)
FITNESS_VALLEY_START 0      # if FITNESS_VALLEY = 1, orgs with num_key_instructions
                            # from FITNESS_VALLEY_START to FITNESS_VALLEY_STOP
                            # get fitness 1 (lowest)
FITNESS_VALLEY_STOP 0       # if FITNESS_VALLEY = 1, orgs with num_key_instructions
                            # from FITNESS_VALLEY_START to FITNESS_VALLEY_STOP
                            # get fitness 1 (lowest)
MAX_CPU_THREADS 1           # Number of Threads a CPU can spawn
THREAD_SLICING_METHOD 0     # Formula for and organism's thread slicing
                            #   (num_threads-1) * THREAD_SLICING_METHOD + 1
                            # 0 = One thread executed per time slice.
                            # 1 = All threads executed each time slice.
MAX_LABEL_EXE_SIZE 1        # Max nops marked as executed when labels are used
MERIT_GIVEN 0.0             # Fraction of merit donated with 'donate' command
MERIT_RECEIVED 0.0          # Multiplier of merit given with 'donate' command
MAX_DONATE_KIN_DIST -1      # Limit on distance of relation for donate; -1=no max
MAX_DONATE_EDIT_DIST -1     # Limit on genetic (edit) distance for donate; -1=no max
MIN_GB_DONATE_THRESHOLD -1  # threshold green beard donates only to orgs above this
                            # donation attempt threshold; -1=no thresh
DONATE_THRESH_QUANTA 10     # The size of steps between quanta donate thresholds
MAX_DONATES 1000000         # Limit on number of donates organisms are allowed.
PRECALC_MERIT 0             # Pre-calculate merit at birth (unlimited resources only).

### GENEOLOGY_GROUP ###
# Geneology
TRACK_MAIN_LINEAGE 1  # Keep all ancestors of the active population?
                      # 0=no, 1=yes, 2=yes,w/sexual population
THRESHOLD 3           # Number of organisms in a genotype needed for it
                      #   to be considered viable.
GENOTYPE_PRINT 0      # 0/1 (off/on) Print out all threshold genotypes?
GENOTYPE_PRINT_DOM 0  # Print out a genotype if it stays dominant for
                      #   this many updates. (0 = off)
SPECIES_THRESHOLD 2   # max failure count for organisms to be same species
SPECIES_RECORDING 0   # 1 = full, 2 = limited search (parent only)
SPECIES_PRINT 0       # 0/1 (off/on) Print out all species?
TEST_CPU_TIME_MOD 20  # Time allocated in test CPUs (multiple of length)

### LOG_GROUP ###
# Log Files
LOG_CREATURES 0  # 0/1 (off/on) toggle to print file.
LOG_GENOTYPES 0  # 0 = off, 1 = print ALL, 2 = print threshold ONLY.
LOG_THRESHOLD 0  # 0/1 (off/on) toggle to print file.
LOG_SPECIES 0    # 0/1 (off/on) toggle to print file.

### LINEAGE_GROUP ###
# Lineage
# NOTE: This should probably be called "Clade"
# This one can slow down avida a lot. It is used to get an idea of how
# often an advantageous mutation arises, and where it goes afterwards.
# Lineage creation options are.  Works only when LOG_LINEAGES is set to 1.
#   0 = manual creation (on inject, use successive integers as lineage labels).
#   1 = when a child's (potential) fitness is higher than that of its parent.
#   2 = when a child's (potential) fitness is higher than max in population.
#   3 = when a child's (potential) fitness is higher than max in dom. lineage
# *and* the child is in the dominant lineage, or (2)
#   4 = when a child's (potential) fitness is higher than max in dom. lineage
# (and that of its own lineage)
#   5 = same as child's (potential) fitness is higher than that of the
#       currently dominant organism, and also than that of any organism
#       currently in the same lineage.
#   6 = when a child's (potential) fitness is higher than any organism
#       currently in the same lineage.
#   7 = when a child's (potential) fitness is higher than that of any
#       organism in its line of descent
LOG_LINEAGES 0             # 
LINEAGE_CREATION_METHOD 0  # 

### ORGANISM_NETWORK_GROUP ###
# Organism Network Communication
NET_ENABLED 0      # Enable Network Communication Support
NET_DROP_PROB 0.0  # Message drop rate
NET_MUT_PROB 0.0   # Message corruption probability
NET_MUT_TYPE 0     # Type of message corruption.  0 = Random Single Bit, 1 = Always Flip Last
NET_STYLE 0        # Communication Style.  0 = Random Next, 1 = Receiver Facing

### BUY_SELL_GROUP ###
# Buying and Selling Parameters
SAVE_RECEIVED 0  # Enable storage of all inputs bought from other orgs
BUY_PRICE 0      # price offered by organisms attempting to buy
SELL_PRICE 0     # price offered by organisms attempting to sell

### ANALYZE_GROUP ###
# Analysis Settings
MT_CONCURRENCY 1   # Number of concurrent analyze threads
ANALYZE_OPTION_1   # String variable accessible from analysis scripts
ANALYZE_OPTION_2   # String variable accessible from analysis scripts

### ENERGY_GROUP ###
# Energy Settings
ENERGY_ENABLED 0                       # Enable Energy Model. 0/1 (off/on)
ENERGY_GIVEN_ON_INJECT 0               # Energy given to organism upon injection.
ENERGY_GIVEN_AT_BIRTH 0                # Energy given to offspring upon birth.
FRAC_PARENT_ENERGY_GIVEN_AT_BIRTH 0.5  # Fraction of perent's energy given to offspring.
FRAC_ENERGY_DECAY_AT_BIRTH 0.0         # Fraction of energy lost due to decay during reproduction.
NUM_INST_EXC_BEFORE_0_ENERGY 0         # Number of instructions executed before energy is exhausted.
ENERGY_CAP -1                          # Maximum amount of energy that can be stored in an organism.  -1 means the cap is set to Max Int
APPLY_ENERGY_METHOD 0                  # When should rewarded energy be applied to current energy?
                                       # 0 = on divide
                                       # 1 = on completion of task
                                       # 2 = on sleep
ENERGY_VERBOSE 0                       # Print energy and merit values. 0/1 (off/on)
LOG_SLEEP_TIMES 0                      # Log sleep start and end times. 0/1 (off/on)
                                       # WARNING: may use lots of memory.

### SECOND_PASS_GROUP ###
# Tracking metrics known after the running experiment previously
TRACK_CCLADES 0                    # Enable tracking of coalescence clades
TRACK_CCLADES_IDS coalescence.ids  # File storing coalescence IDs

### GX_GROUP ###
# Gene Expression CPU Settings
MAX_PROGRAMIDS 16                # Maximum number of programids an organism can create.
MAX_PROGRAMID_AGE 2000           # Max number of CPU cycles a programid executes before it is removed.
IMPLICIT_GENE_EXPRESSION 0       # Create executable programids from the genome without explicit allocation and copying?
IMPLICIT_BG_PROMOTER_RATE 0.0    # Relative rate of non-promoter sites creating programids.
IMPLICIT_TURNOVER_RATE 0.0       # Number of programids recycled per CPU cycle. 0 = OFF
IMPLICIT_MAX_PROGRAMID_LENGTH 0  # Creation of an executable programid terminates after this many instructions. 0 = disabled
IMPLICIT_REPRO_TIME 0            # Implicitly call the repro instruction after completing this many cpu cycles. 0 = disabled.

### PROMOTER_GROUP ###
# Promoters
PROMOTERS_ENABLED 0             # Use the promoter/terminator execution scheme.
                                # Certain instructions must also be included.
PROMOTER_PROCESSIVITY 1.0       # Chance of not terminating after each cpu cycle.
PROMOTER_PROCESSIVITY_INST 1.0  # Chance of not terminating after each instruction.
PROMOTER_BG_STRENGTH 0          # Probability of positions that are not promoter
                                # instructions initiating execution (promoters are 1).
REGULATION_STRENGTH 1           # Strength added or subtracted to a promoter by regulation.
REGULATION_DECAY_FRAC 0.1       # Fraction of regulation that decays away. 
                                # Max regulation = 2^(REGULATION_STRENGTH/REGULATION_DECAY_FRAC)
