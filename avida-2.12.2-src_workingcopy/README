Avida 2.12.x   http://avida.devosoft.org
----------------------------------------------------------------------
Digital Evolution Laboratory at Michigan State University
(http://devolab.msu.edu)


I.   REQUIREMENTS
II.  GETTING STARTED
III. CMAKE CONFIGURATION OPTIONS
IV.  CONFIGURING THE CMAKE BUILD
V.   RUNNING CONSISTENCY TESTS
VI.  DOCUMENTATION



I. REQUIREMENTS
----------------------------------------------------------------------

In order to build Avida, you must have CMake 2.4.x or greater
installed. CMake is available from http://www.cmake.org

NCurses, in order to build the console viewer.

Python 2.6 or greater to run consistency tests.

On Mac OS X, a separate Xcode project is available. Xcode 2.4 or
greater is required.


II. GETTING STARTED
----------------------------------------------------------------------

To compile and install Avida, all you have to do is run:
$ ./build_avida

By default, you will get an optimized version of the code, as well as
the NCurses viewer. The installation goes into a directory called
'work' that is created in a subdirectory named 'cbuild' directory.
See below how to change that.

OR 

In Mac OS X's Xcode, select the Deployment for an optimized build
configured for your CPU platform.  Click the 'Build' button on
the project window.  The compiled binary and starting config files
will be copied (by default) into:
${PROJECT_DIR}/build/Deployment/work


III. CMAKE CONFIGURATION OPTIONS
----------------------------------------------------------------------

Here are the main options available when configuring and building
Avida with cmake :

AVD_CMDLINE
This is a BOOL, either ON or OFF, to enable building interfaceless
Avida (fastest version).
ON by default.

AVD_GUI_NCURSES
 -  This is a BOOL, either ON or OFF, to enable building Avida console
    interface.
 ON by default.

AVD_UNIT_TESTS
 -  This is a BOOL, either ON or OFF, to enable building primitive
    unit test suites.
 OFF by default.

CMAKE_BUILD_TYPE
 -  This is a STRING, one of "None", "Debug", "Release",
    "RelWithDebInfo", "MinSizeRel", to vary optimization levels and
    debugging information in the build.
 "Release" by default.



IV. CONFIGURING THE CMAKE BUILD
----------------------------------------------------------------------

There are three ways by which you can set the various options.


For a simple 'gui' like interface, from the build directory run:
$ ccmake ../

Pressing 'c' will configure 
Pressing 'g' will generate the make files and exit


If you'd like to be prompted with questions for each option, execute
the following from the build directory:
$ cmake -i ../


From the command-line option, the cmake option -D allows setting Avida
configuration options with the following syntax:
-D<variable name>:<type>=<value>

To completely specify each of the above Avida options, cd into your
build directory and type something like :
$ cmake -DAVD_GUI_NCURSES:BOOL=ON \
  -DAVD_CMDLINE:BOOL=ON \
  -DAVD_UNIT_TESTS:BOOL=OFF \
  -DCMAKE_BUILD_TYPE:STRING=Release \
  path-to-source-directory


V. RUNNING CONSISTENCY TESTS
----------------------------------------------------------------------

With Avida built and 'installed' using CMake (the default for the
'build_avida' script), simply execute the 'run_tests' script:

$ ./run_tests


For a list of useful options accepted by the TestRunner script, supply
the -h option on the command line:

$ ./run_tests -h


The 'builddir' option will be particularly for Xcode users.  This
option will allow the tests to be run on Xcode products without having
to move the files to where the CMake outputs are placed by default.
For example, the default Deployment build can be tested as follows:

$ ./run_tests --builddir=build/Deployment/


VI. DOCUMENTATION
----------------------------------------------------------------------

Helpful usage and code documentation can be found in the HTML files in
the 'documentation' directory.  See index.html.


Revised 2010-11-16 DMB
